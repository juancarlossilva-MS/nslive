{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay-C\\\\Documents\\\\apps\\\\nslive\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport YouTube from 'react-youtube';\n\nconst Example = props => {\n  const opts = {\n    height: '200',\n    width: '300',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  let ref = /*#__PURE__*/React.createRef();\n  let ref2 = /*#__PURE__*/React.createRef();\n  var player, embedCode;\n\n  const callReady = event => {\n    player = event.target;\n    embedCode = event.target.getIframe();\n    console.log('acho q deu certo');\n  };\n\n  var iframe;\n\n  function playFullscreen() {\n    console.log('acho q deu certo2');\n    console.log(ref);\n    console.log(ref.current);\n    iframe = ref.current; // iframe.style.display = \"block\";\n\n    player.playVideo();\n    console.log(ref2);\n    console.log(ref2.current);\n    console.log(embedCode);\n    var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;\n\n    if (requestFullScreen) {\n      requestFullScreen.bind(embedCode)();\n    }\n\n    console.log(requestFullScreen);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: playFullscreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"PLAY FULL\"), __jsx(\"div\", {\n    style: {\n      display: \"none\"\n    },\n    onClick: playFullscreen,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(YouTube, {\n    ref: ref2,\n    videoId: \"YjF85_E4p70\",\n    opts: opts,\n    onReady: callReady,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), \";\"));\n};\n\nexport default Example;","map":{"version":3,"sources":["C:/Users/Jay-C/Documents/apps/nslive/pages/index.js"],"names":["React","YouTube","Example","props","opts","height","width","playerVars","autoplay","ref","createRef","ref2","player","embedCode","callReady","event","target","getIframe","console","log","iframe","playFullscreen","current","playVideo","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","bind","display"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHD,GAAb;AAQA,MAAIC,GAAG,gBAAGT,KAAK,CAACU,SAAN,EAAV;AACA,MAAIC,IAAI,gBAAGX,KAAK,CAACU,SAAN,EAAX;AACA,MAAIE,MAAJ,EAAYC,SAAZ;;AACA,QAAMC,SAAS,GAAIC,KAAD,IAAU;AAC1BH,IAAAA,MAAM,GAAGG,KAAK,CAACC,MAAf;AACAH,IAAAA,SAAS,GAAGE,KAAK,CAACC,MAAN,CAAaC,SAAb,EAAZ;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAJD;;AAKA,MAAIC,MAAJ;;AACA,WAASC,cAAT,GAA0B;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACa,OAAhB;AAEAF,IAAAA,MAAM,GAAGX,GAAG,CAACa,OAAb,CALwB,CAMxB;;AACAV,IAAAA,MAAM,CAACW,SAAP;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACW,OAAjB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,QAAIW,iBAAiB,GAAGJ,MAAM,CAACI,iBAAP,IAA4BJ,MAAM,CAACK,oBAAnC,IAA2DL,MAAM,CAACM,uBAA1F;;AACA,QAAIF,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBd,SAAvB;AACD;;AAEDK,IAAAA,OAAO,CAACC,GAAR,CAAYK,iBAAZ;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAEH,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAKE;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAA+B,IAAA,OAAO,EAAEP,cAAxC;AAAwD,IAAA,GAAG,EAAEZ,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AAAU,IAAA,GAAG,EAAEE,IAAf;AAAqB,IAAA,OAAO,EAAC,aAA7B;AAA2C,IAAA,IAAI,EAAEP,IAAjD;AAAuD,IAAA,OAAO,EAAEU,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,MALF,CADF;AAYD,CAjDD;;AAmDA,eAAeZ,OAAf","sourcesContent":["import React from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nconst Example = (props) => {\r\n  const opts = {\r\n    height: '200',\r\n    width: '300',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  let ref = React.createRef();\r\n  let ref2 = React.createRef();\r\n  var player, embedCode;\r\n  const callReady = (event) =>{\r\n    player = event.target;\r\n    embedCode = event.target.getIframe();\r\n      console.log('acho q deu certo');\r\n  }\r\n  var iframe;\r\n  function playFullscreen (){\r\n    console.log('acho q deu certo2');\r\n    console.log(ref);\r\n    console.log(ref.current);\r\n   \r\n    iframe = ref.current;\r\n    // iframe.style.display = \"block\";\r\n    player.playVideo();\r\n    console.log(ref2)\r\n    console.log(ref2.current)\r\n    console.log(embedCode)\r\n    var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;\r\n    if (requestFullScreen) {\r\n      requestFullScreen.bind(embedCode)();\r\n    }\r\n\r\n    console.log(requestFullScreen);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <button onClick={playFullscreen}>\r\n      PLAY FULL\r\n    </button>\r\n    \r\n      <div style={{display:\"none\"}}  onClick={playFullscreen} ref={ref} >\r\n      <YouTube  ref={ref2} videoId=\"YjF85_E4p70\" opts={opts} onReady={callReady} />;\r\n      </div>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}