{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WINDOWS\\\\Desktop\\\\APP\\\\nslive2.0\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport YouTube from 'react-youtube';\n\nconst Example = props => {\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  let ref = /*#__PURE__*/React.createRef();\n  let ref2 = /*#__PURE__*/React.createRef();\n  var player;\n\n  const callReady = event => {\n    player = event.target;\n    console.log('acho q deu certo');\n  };\n\n  var iframe;\n\n  function playFullscreen() {\n    console.log('acho q deu certo2');\n    console.log(ref);\n    console.log(ref.current);\n    iframe = ref.current;\n    iframe.style.display = \"block\";\n    player.playVideo();\n    console.log(ref2);\n    console.log(ref2.current);\n    var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;\n\n    if (requestFullScreen) {\n      requestFullScreen.bind(iframe)();\n    }\n\n    console.log(requestFullScreen);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: playFullscreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"PLAY FULL\"), __jsx(\"div\", {\n    style: {\n      display: \"none\"\n    },\n    onClick: playFullscreen,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(YouTube, {\n    ref: ref2,\n    videoId: \"YjF85_E4p70\",\n    opts: opts,\n    onReady: callReady,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), \";\"));\n};\n\nexport default Example;","map":{"version":3,"sources":["C:/Users/WINDOWS/Desktop/APP/nslive2.0/pages/index.js"],"names":["React","YouTube","Example","props","opts","height","width","playerVars","autoplay","ref","createRef","ref2","player","callReady","event","target","console","log","iframe","playFullscreen","current","style","display","playVideo","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHD,GAAb;AAQA,MAAIC,GAAG,gBAAGT,KAAK,CAACU,SAAN,EAAV;AACA,MAAIC,IAAI,gBAAGX,KAAK,CAACU,SAAN,EAAX;AACA,MAAIE,MAAJ;;AACA,QAAMC,SAAS,GAAIC,KAAD,IAAU;AAC1BF,IAAAA,MAAM,GAAGE,KAAK,CAACC,MAAf;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAHD;;AAIA,MAAIC,MAAJ;;AACA,WAASC,cAAT,GAA0B;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACW,OAAhB;AAEAF,IAAAA,MAAM,GAAGT,GAAG,CAACW,OAAb;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,OAAvB;AACAV,IAAAA,MAAM,CAACW,SAAP;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACS,OAAjB;AACA,QAAII,iBAAiB,GAAGN,MAAM,CAACM,iBAAP,IAA4BN,MAAM,CAACO,oBAAnC,IAA2DP,MAAM,CAACQ,uBAA1F;;AACA,QAAIF,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBT,MAAvB;AACD;;AAEDF,IAAAA,OAAO,CAACC,GAAR,CAAYO,iBAAZ;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAEL,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAKE;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAA+B,IAAA,OAAO,EAAEH,cAAxC;AAAwD,IAAA,GAAG,EAAEV,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEE,IAAd;AAAoB,IAAA,OAAO,EAAC,aAA5B;AAA0C,IAAA,IAAI,EAAEP,IAAhD;AAAsD,IAAA,OAAO,EAAES,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,MALF,CADF;AAYD,CA/CD;;AAiDA,eAAeX,OAAf","sourcesContent":["import React from 'react';\nimport YouTube from 'react-youtube';\n\n\nconst Example = (props) => {\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  };\n  let ref = React.createRef();\n  let ref2 = React.createRef();\n  var player;\n  const callReady = (event) =>{\n    player = event.target;\n      console.log('acho q deu certo');\n  }\n  var iframe;\n  function playFullscreen (){\n    console.log('acho q deu certo2');\n    console.log(ref);\n    console.log(ref.current);\n   \n    iframe = ref.current;\n    iframe.style.display = \"block\";\n    player.playVideo();\n    console.log(ref2)\n    console.log(ref2.current)\n    var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;\n    if (requestFullScreen) {\n      requestFullScreen.bind(iframe)();\n    }\n\n    console.log(requestFullScreen);\n  }\n\n  return (\n    <div>\n    <button onClick={playFullscreen}>\n      PLAY FULL\n    </button>\n    \n      <div style={{display:\"none\"}}  onClick={playFullscreen} ref={ref} >\n      <YouTube ref={ref2} videoId=\"YjF85_E4p70\" opts={opts} onReady={callReady} />;\n      </div>\n  </div>\n  \n  );\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}